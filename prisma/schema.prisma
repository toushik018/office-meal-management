generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  name      String
  email     String     @unique
  password  String
  role      UserRole   @default(USER)
  status    UserStatus @default(ACTIVE)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  orders    Order[]

  @@map("users")
}

model Item {
  id        String     @id @default(uuid())
  name      String
  category  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  mealItems MealItem[]

  @@map("items")
}

model Meal {
  id             String     @id @default(uuid())
  name           String
  date           DateTime
  isRiceIncluded Boolean
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  mealItems      MealItem[]
  orders         Order[]

  @@map("meals")
}

model MealItem {
  id        String   @id @default(uuid())
  mealId    String
  itemId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  meal Meal @relation(fields: [mealId], references: [id])
  item Item @relation(fields: [itemId], references: [id])

  @@unique([mealId, itemId])
  @@map("meal_items")
}

model Order {
  id            String   @id @default(uuid())
  userId        String
  mealId        String
  orderDate     DateTime
  selectedItems String[]
  noMeal        Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  meal Meal @relation(fields: [mealId], references: [id])

  @@map("orders")
}

enum UserStatus {
  ACTIVE
  BANNED
}

enum UserRole {
  USER
  ADMIN
}
